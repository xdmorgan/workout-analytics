// base mixin
//----------------------------------

@mixin typebeast-break-min($size) {
  @media screen and (min-width: $size) {
    @content;
  }
}

@mixin typebeast-break-max($size) {
  // prevent min and max width overlap pixel
  @media screen and (max-width: ($size - 1)) {
    @content;
  }
}

@mixin typebeast(
  $family: null,
  $letter: null,
  $line: null,
  $size: null,
  $style: null,
  $transform: null,
  $weight: null
) {
  font-family: $family;
  @if typebeast-setting('calculate-rem-size') {
    @if $size {
      font-size: typebeast-to-rem($size);
    }
    @if $size and $line {
      line-height: ($line / $size);
    }
  } @else {
    font-size: $size;
    line-height: $line;
  }
  font-weight: $weight;
  font-style: $style;
  letter-spacing: $letter;
  text-transform: $transform;
}

@mixin typebeast-link-style(
  $color: null,
  $hover: null,
  $active: null,
  $visited: null,
  $style: null
) {
  color: $color;
  text-decoration-style: $style;
  &:hover {
    color: $hover;
  }
  &:active {
    color: $color;
  }
}

@mixin typebeast-code-style(
  $color: null,
  $background: null,
  $radius: null,
  $size: null,
  $inset: null
) {
  color: $color;
  background-color: $background;
  border-radius: $radius;
  font-size: $size;
  padding: $inset;
}

@mixin typebeast-kbd-style(
  $color: null,
  $background: null,
  $border: null,
  $radius: null,
  $size: null,
  $inset: null
) {
  position: relative; // layering rquirement
  font-size: $size;
  color: $color;
  background-color: $background;
  border-radius: $radius;
  padding: $inset;
  // these colors matching creates the key cap effect
  border: 1px solid $border;
  box-shadow: 0 0.15em 0 0 $border;
}
